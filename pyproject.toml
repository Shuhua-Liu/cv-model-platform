[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cv-model-platform"
version = "0.1.0"
description = "A unified platform for managing computer vision models"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Shuhua Liu", email = "shuhua.liu0709@gmail.com"},
]
maintainers = [
    {name = "Shuhua Liu", email = "shuhua.liu0709@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["computer-vision", "deep-learning", "ai", "model-management", "pytorch"]
requires-python = ">=3.8"

dependencies = [
    "torch>=2.0.0,<3.0.0",
    "torchvision>=0.15.0,<1.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn[standard]>=0.23.0,<1.0.0",
    "diffusers>=0.24.0,<1.0.0",
    "transformers>=4.35.0,<5.0.0",
    "ultralytics>=8.0.200,<9.0.0",
    "segment-anything>=1.0,<2.0",
    "open-clip-torch>=2.20.0,<3.0.0",
    "opencv-python>=4.8.0,<5.0.0",
    "pillow>=10.0.0,<11.0.0",
    "numpy>=1.24.0,<2.0.0",
    "pyyaml>=6.0,<7.0",
    "pydantic>=2.0.0,<3.0.0",
    "typing-extensions>=4.5.0",
    "accelerate>=0.24.0",
    "safetensors>=0.4.0",
]

[project.optional-dependencies]

dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "coverage[toml]>=7.3.0",
]

web = [
    "streamlit>=1.28.0",
    "gradio>=4.0.0",
    "plotly>=5.17.0",
    "dash>=2.14.0",
]

monitoring = [
    "prometheus-client>=0.18.0",
    "grafana-client>=3.5.0",
    "psutil>=5.9.0",
    "nvidia-ml-py>=12.535.0",
]

optimization = [
    "xformers>=0.0.22",
    "flash-attn>=2.3.0; python_version>='3.9'",
    "triton>=2.1.0; python_version>='3.9'",
    "bitsandbytes>=0.41.0",
]

cloud = [
    "boto3>=1.34.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.19.0",
    "kubernetes>=28.1.0",
]

all = [
    "cv-model-platform[dev,web,monitoring,optimization,cloud]"
]

[project.urls]
Homepage = "https://github.com/Shuhua-Liu/cv-model-platform"
Documentation = "https://cv-model-platform.readthedocs.io"
Repository = "https://github.com/Shuhua-Liu/cv-model-platform.git"
Issues = "https://github.com/Shuhua-Liu/cv-model-platform/issues"
Changelog = "https://github.com/Shuhua-Liu/cv-model-platform/blob/main/CHANGELOG.md"

[project.scripts]
cv-platform = "cv_platform.cli:main"
cv-platform-server = "cv_platform.api.rest_api:main"
cv-platform-web = "cv_platform.web.app:main"


[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
cv_platform = [
    "config/*.yaml",
    "web/static/**/*",
    "web/templates/*.html",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]


[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "ultralytics.*",
    "segment_anything.*",
    "open_clip.*",
    "diffusers.*",
    "transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=cv_platform",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU (deselect with '-m \"not gpu\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.pre-commit]
repos = [
    {
        repo = "https://github.com/pre-commit/pre-commit-hooks",
        rev = "v4.4.0",
        hooks = [
            {id = "trailing-whitespace"},
            {id = "end-of-file-fixer"},
            {id = "check-yaml"},
            {id = "check-added-large-files"},
        ]
    },
    {
        repo = "https://github.com/psf/black",
        rev = "23.7.0",
        hooks = [{id = "black"}]
    },
    {
        repo = "https://github.com/charliermarsh/ruff-pre-commit",
        rev = "v0.1.0",
        hooks = [{id = "ruff", args = ["--fix", "--exit-non-zero-on-fix"]}]
    },
    {
        repo = "https://github.com/pre-commit/mirrors-mypy",
        rev = "v1.5.0",
        hooks = [{id = "mypy", additional_dependencies = ["types-PyYAML", "types-requests"]}]
    }
]